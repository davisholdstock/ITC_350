CREATE TABLE IF NOT EXISTS Recipe
(
  RecipeID INT AUTO_INCREMENT NOT NULL,
  Rating FLOAT NOT NULL,
  Difficulty FLOAT NOT NULL,
  Directions VARCHAR(4500) NOT NULL,
  Duration INT NOT NULL,
  Title VARCHAR(30) NOT NULL,
  PRIMARY KEY (RecipeID)
);

CREATE TABLE IF NOT EXISTS User
(
  UserID INT AUTO_INCREMENT NOT NULL,
  Username VARCHAR(30) UNIQUE NOT NULL,
  Password VARCHAR(30) NOT NULL,
  PRIMARY KEY (UserID)
);

CREATE TABLE IF NOT EXISTS Friendship
(
  PUserID INT NOT NULL,
  FUserID INT NOT NULL,
  PRIMARY KEY (PUserID, FUserID),
  FOREIGN KEY (PUserID) REFERENCES User(UserID),
  FOREIGN KEY (FUserID) REFERENCES User(UserID)
);

CREATE TABLE IF NOT EXISTS Item
(
  ItemID INT AUTO_INCREMENT NOT NULL,
  ItemName VARCHAR(30) NOT NULL,
  PRIMARY KEY (ItemID)
);

CREATE TABLE IF NOT EXISTS CookBook
(
  CBRecipeID INT NOT NULL,
  CBUserID INT NOT NULL,
  PRIMARY KEY (CBRecipeID, CBUserID),
  FOREIGN KEY (CBRecipeID) REFERENCES Recipe(RecipeID),
  FOREIGN KEY (CBUserID) REFERENCES User(UserID)
);

CREATE TABLE IF NOT EXISTS Ingredient
(
  Count FLOAT NOT NULL,
  Units VARCHAR(10),
  IRecipeID INT NOT NULL,
  IngredientID INT NOT NULL,
  PRIMARY KEY (IRecipeID, IngredientID),
  FOREIGN KEY (IRecipeID) REFERENCES Recipe(RecipeID),
  FOREIGN KEY (IngredientID) REFERENCES Item(ItemID)
);

CREATE TABLE IF NOT EXISTS ShoppingList
(
  SLUserID INT NOT NULL,
  SLItemID INT NOT NULL,
  PRIMARY KEY (SLUserID, SLItemID),
  FOREIGN KEY (SLUserID) REFERENCES User(UserID),
  FOREIGN KEY (SLItemID) REFERENCES Item(ItemID)
);